name: UI Tests & Allure Report

# –¢—Ä–∏–≥–≥–µ—Ä—ã: push –∏ PR –≤ main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
env:
  PYTHON_VERSION: "3.11"
  ALLURE_RESULTS_DIR: "./allure-results"
  ALLURE_REPORT_DIR: "./allure-report"
  ALLURE_HISTORY_DIR: "./allure-history"

jobs:

  # üß™ –ó–∞–ø—É—Å–∫ UI-—Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ Playwright
  ui-tests:
    runs-on: ubuntu-latest
    steps:

      # 1. Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      # 2. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ pip-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—É—Å–∫–æ—Ä—è–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏)
      - name: üíæ Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 3. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–æ–≤ Playwright (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
      - name: üíæ Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers

      # 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      - name: üêç Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 5. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π (–ª–æ–≥–∏, –≤–∏–¥–µ–æ, –æ—Ç—á—ë—Ç—ã –∏ —Ç.–¥.)
      - name: üóÇÔ∏è Create required directories
        run: |
          mkdir -p ${{ env.ALLURE_RESULTS_DIR }} videos tracing logs
          touch browser_state.json
          echo -e "\033[32m‚úÖ Directories and files created\033[0m"

      # 6. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π + Playwright
      - name: üì¶ Install dependencies and Playwright
        run: |
          echo "üîß Upgrading pip..."
          python -m pip install --upgrade pip
          echo "üì¶ Installing requirements..."
          pip install -r requirements.txt
          echo "ü§ñ Installing Playwright browsers..."
          playwright install --with-deps
          echo -e "\033[32m‚úÖ Dependencies installed\033[0m"

      # 7. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π Allure-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      - name: üß™ Run UI tests with pytest
        run: |
          pytest -m UI \
            --alluredir=${{ env.ALLURE_RESULTS_DIR }} \
            --numprocesses=2 \
            --tb=short
          echo -e "\033[32m‚úÖ UI tests completed\033[0m"

      # üîÑ 8. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ coverage
      - name: üîÑ Restore Coverage history
        uses: actions/cache/restore@v4
        with:
          path: coverage-history.json
          key: coverage-history-${{ github.run_id }}
          restore-keys: |
            coverage-history-

      # üìä 9. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è coverage-–æ—Ç—á—ë—Ç–∞
      - name: üìä Generate Coverage report
        if: always()
        run: |
          echo "üìä Generating UI Coverage report..."
          ui-coverage-tool save-report
          echo "‚úÖ Coverage report saved to coverage.html"
          echo -e "\033[32müìà Coverage history saved to coverage-history.json\033[0m"

      # üíæ 10. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ coverage
      - name: üíæ Cache Coverage history
        if: always()
        uses: actions/cache/save@v4
        with:
          path: coverage-history.json
          key: coverage-history-${{ github.run_id }}

      # üì§ 11. –ó–∞–≥—Ä—É–∑–∫–∞ coverage-–æ—Ç—á—ë—Ç–∞ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
      - name: üì§ Upload Coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

      # üì§ 12. –ê—Ä—Ö–∏–≤–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Allure
      - name: üì§ Upload Allure results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ${{ env.ALLURE_RESULTS_DIR }}

  # üìä –ü—É–±–ª–∏–∫–∞—Ü–∏—è Allure-–æ—Ç—á—ë—Ç–∞ –Ω–∞ GitHub Pages
  publish-report:
    name: üìà Publish Allure Report to GitHub Pages
    needs: ui-tests
    if: always()
    runs-on: ubuntu-latest
    steps:

      # 1. Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞)
      - name: üì• Checkout main branch
        uses: actions/checkout@v4

      # 2. –°–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–æ–≤
      - name: üì• Download Allure results from ui-tests job
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ${{ env.ALLURE_RESULTS_DIR }}

      # üì• 3. Checkout gh-pages –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
      - name: üì• Checkout gh-pages branch for history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # üìä 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure-–æ—Ç—á—ë—Ç–∞
      - name: üìä Generate Allure Report with history support
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: ${{ env.ALLURE_RESULTS_DIR }}
          allure_report: ${{ env.ALLURE_REPORT_DIR }}
          allure_history: ${{ env.ALLURE_HISTORY_DIR }}

      # 5. –î–µ–ø–ª–æ–π –æ—Ç—á—ë—Ç–∞ –Ω–∞ GitHub Pages
      - name: üöÄ Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ${{ env.ALLURE_HISTORY_DIR }}

      # üîó 6. –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç—á—ë—Ç
      - name: üîó Print report URL
        run: |
          echo -e "\033[32m‚úÖ Allure –æ—Ç—á–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!\033[0m"
          echo -e "\033[34müëâ –û—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\033[0m"
          echo "üìå Coverage –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö 'coverage-report'"