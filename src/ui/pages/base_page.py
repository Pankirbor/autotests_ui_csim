from re import Pattern

import allure
from playwright.sync_api import Page, expect
from playwright.sync_api import TimeoutError as PlaywrightTimeoutError
import pytest

from src.ui.locators.cookies import CookiesLocators
from src.utils.logger import get_logger

logger = get_logger(__name__.upper())


class BasePage:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É,
    –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.

    Attributes:
        page (Page): –≠–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–∞—É–∑–µ—Ä–∞.

    Methods:
        visit: –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é URL-–∞–¥—Ä–µ—Å.
        reload: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
        check_current_url: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ç–µ–∫—É—â–∏–π URL —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É.
    """

    def __init__(self, page: Page) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.

        Args:
            page (Page): –≠–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–∞—É–∑–µ—Ä–∞.
        """
        self.page = page

    def accept_cookies_if_present(self) -> None:
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫—É–∫–∏, –µ—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –≤–∏–¥–µ–Ω."""
        cookies_dialog = self.page.locator(CookiesLocators.CONTAINER.selector)
        accept_button = self.page.locator(CookiesLocators.ACCEPT_BUTTON.selector)

        cookies_dialog.wait_for(state="visible", timeout=10000)
        if cookies_dialog.is_visible():
            if accept_button.is_visible():
                accept_button.click()
                logger.info("–ö—É–∫–∏ –ø—Ä–∏–Ω—è—Ç—ã")
                self.page.wait_for_timeout(1000)

    def visit(self, url: str) -> None:
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é URL-—Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∂–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏.

        Args:
            url (str): –ê–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏.
        """
        step = f"–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: '{url}'"
        with allure.step(step):
            logger.info(step)
            self.page.goto(url, wait_until="networkidle", timeout=50000)
            try:
                self.accept_cookies_if_present()
            except PlaywrightTimeoutError as e:
                page_title = self.page.title()
                if page_title.strip() == "DDOS-GUARD":
                    logger.warning(
                        f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ CAPTCHA-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ URL: {self.page.url}"
                    )
                    logger.warning(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page_title}")
                    pytest.skip("–¢–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –±–æ—Ç–æ–≤. ")
                else:
                    raise e

    def reload(self) -> None:
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∂–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ DOM."""
        step = f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: '{self.page.url}'"
        with allure.step(step):
            logger.info(step)
            self.page.reload(wait_until="domcontentloaded")

    def check_current_url(self, expected_url: Pattern[str]) -> None:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ç–µ–∫—É—â–∏–π URL —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º.

        Args:
            expected_url (Pattern[str]): –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ URL.
        """
        step = f"Checking that current url matches pattern '{expected_url.pattern}'"
        with allure.step(step):
            logger.info(step)
            expect(self.page).to_have_url(expected_url)
